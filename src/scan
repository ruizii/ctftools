#!/bin/bash

RED=$'\e[31m'
GREEN=$'\e[32m'
RESET=$'\e[0m'

current_filename=""

trap ctrl_c INT

ctrl_c() {
    sudo rm -f "$current_filename"
    printf "\n%s[X]%s Aborting scan\n" "$RED" "$RESET" >&2
    exit 1
}

usage() {
    printf "Usage: %s [options] <ip>\n" "$(basename "$0")"
    printf "\nOptions:\n"
    printf "\t-u, --udp\t\tUDP scan\n"
    printf "\t-o, --outfile <file>\tName of the output file\n"
    printf "\t-h, --help\t\tPrint this message and exit\n"
}

main() {
    if ! PARSED=$(getopt -o uo:h --long udp,outfile:,help -n "$0" -- "$@"); then
        echo "Failed to parse arguments" >&2
        exit 1
    fi

    eval set -- "$PARSED"

    local outfile_tcp="tcp_scan.txt"
    local outfile_udp="udp_scan.txt"
    local udp=0
    local target=""
    local bat_cmd="batcat"

    while true; do
        case "$1" in
            -u | --udp)
                udp=1
                shift
                ;;
            -o | --outfile)
                current_filename="$2"
                shift 2
                ;;
            -h | --help)
                usage
                exit 0
                ;;
            --)
                shift
                break
                ;;
        esac
    done

    if (($# > 1)); then
        printf "%s[X]%s Error: Can't have more than 1 positional argument\n\n" "$RED" "$RESET" >&2
        usage
        exit 1
    fi

    target="$1"

    if [[ -z "$current_filename" ]]; then
        if ((udp)); then
            current_filename="$outfile_udp"
        else
            current_filename="$outfile_tcp"
        fi
    fi

    if [[ -z "$target" ]]; then
        printf "%s[X]%s Error: Missing IP or hostname\n\n" "$RED" "$RESET" >&2
        usage
        exit 1
    fi

    if [[ -f /etc/arch-release ]]; then
        bat_cmd="bat"
    fi

    if (("$udp")); then
        sudo nmap -sU -F -sCV -T4 --open -vvv -n "$target" -oN "$current_filename" | "$bat_cmd" -pp -l python
    else
        sudo nmap -sS -p- -sCV -T4 --open -vvv -n "$target" -oN "$current_filename" | "$bat_cmd" -pp -l python
    fi

    sudo chown "$USER":"$USER" "$current_filename"

    printf "\n%s[+]%s Scan saved as %s\n" "$GREEN" "$RESET" "$current_filename"
}

main "$@"
